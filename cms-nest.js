function fetchWithTimeout(e,t={},n=5e3){const o=new AbortController,r=o.signal,i=setTimeout(()=>{o.abort()},n);return fetch(e,{...t,signal:r}).then(e=>(clearTimeout(i),e)).catch(e=>{if(clearTimeout(i),"AbortError"===e.name)throw new Error("Request timed out");throw e})}window.cmsNest=function(){document.querySelectorAll("[data-cms-nest='item']").forEach(function(e){const t=e.querySelector("[data-cms-nest='dropzone']");if(!t)return void console.log("CMS Nest: Dropzone not found");t.innerHTML="";const n=e.querySelector("[data-cms-nest='link']");if(!n)return void console.log("CMS Nest: Link not found");const o=n.getAttribute("href");if(!o)return void console.log("CMS Nest: Href attribute not found");try{const r=new URL(o,window.location.origin);if(r.hostname!==window.location.hostname)return void console.log("CMS Nest: URL is not on the same domain");fetchWithTimeout(o,{},5e3).then(e=>e.text()).then(e=>{const n=new DOMParser().parseFromString(e,"text/html").querySelector("[data-cms-nest='target']");n?t.appendChild(n):console.log("CMS Nest: Target element not found in response")}).catch(e=>console.log("CMS Nest: Error fetching the link or request timed out:",e))}catch(e){console.log("CMS Nest: Invalid URL",e)}})},window.addEventListener("DOMContentLoaded",()=>{window.cmsNest()});
